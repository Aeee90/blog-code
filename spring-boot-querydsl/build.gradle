plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version "1.0.10"
    id 'pl.exsio.querydsl.entityql' version "0.0.12"
    id 'java'
    id 'idea'
    id 'maven'
}

group = 'com.jojoldu.blogcode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation("com.querydsl:querydsl-jpa") // querydsl
    implementation("com.querydsl:querydsl-apt") // querydsl
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-web')

    implementation("com.querydsl:querydsl-sql-spring:4.3.1") // querydsl-sql
    implementation("com.github.eXsio:querydsl-entityql:3.1.0") // entityql
    // auto-registers all Enum types with QueryDSL, auto-registers Boolean and UUID data types
    runtimeOnly('com.h2database:h2')

    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

test {
    useJUnitPlatform()
}

def defaultPackage = 'com.jojoldu.blogcode.querydsl.domain.'
entityql {
    generators = [
            generator = {
                type = 'JPA'
//                sourcePackage = 'com.jojoldu.blogcode.querydsl.domain'
                sourceClasses = [ defaultPackage+'pointevent.PointEvent',
                                  defaultPackage+'student.Student',
                                  defaultPackage+'academy.Academy']
                destinationPackage = 'com.jojoldu.blogcode.querydsl.domain.sql'
                //below parameters are optional and will be set with the following default values:
                destinationPath = new StringBuilder(project.projectDir.absolutePath).append('/src/main/generated').toString()
                filenamePattern = 'E%s.java'
            }
    ]
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// querydsl 적용
def querydslSrcDir = 'src/main/generated'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

idea {
    module {
        generatedSourceDirs += file(querydslSrcDir) // just hint
    }
}

configurations {
    querydsl.extendsFrom compileClasspath
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}


